// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.EntityFrameworkCore;
using WebPuntoVenta.Data.Models;

namespace WebPuntoVenta.Data.Context;

public partial class AppDbContext : DbContext
{
    public AppDbContext(DbContextOptions<AppDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Categorias> Categorias { get; set; }

    public virtual DbSet<CodigosPostales> CodigosPostales { get; set; }

    public virtual DbSet<Direcciones> Direcciones { get; set; }

    public virtual DbSet<Estados> Estados { get; set; }

    public virtual DbSet<Municipios> Municipios { get; set; }

    public virtual DbSet<Ocasiones> Ocasiones { get; set; }

    public virtual DbSet<ProductoOcasiones> ProductoOcasiones { get; set; }

    public virtual DbSet<Productos> Productos { get; set; }

    public virtual DbSet<Proveedores> Proveedores { get; set; }

    public virtual DbSet<Sucursales> Sucursales { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Categorias>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Categori__3214EC07C8FCAD96");

            entity.Property(e => e.Categoria)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false);

            entity.HasOne(d => d.IdPadreNavigation).WithMany(p => p.InverseIdPadreNavigation)
                .HasForeignKey(d => d.IdPadre)
                .HasConstraintName("FK__Categoria__IdPad__787EE5A0");
        });

        modelBuilder.Entity<CodigosPostales>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CodigosP__3214EC078DA18EF6");

            entity.Property(e => e.Asentamiento)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasDefaultValue("");

            entity.HasOne(d => d.IdMunicipioNavigation).WithMany(p => p.CodigosPostales)
                .HasForeignKey(d => d.IdMunicipio)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__CodigosPo__IdMun__4E88ABD4");
        });

        modelBuilder.Entity<Direcciones>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Direccio__3214EC07442A5F81");

            entity.Property(e => e.Calle)
                .IsRequired()
                .HasMaxLength(256)
                .IsUnicode(false);
            entity.Property(e => e.Numero)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);

            entity.HasOne(d => d.IdAsentamientoNavigation).WithMany(p => p.Direcciones)
                .HasForeignKey(d => d.IdAsentamiento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Direccion__IdAse__75A278F5");
        });

        modelBuilder.Entity<Estados>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Estados__3214EC0707859213");

            entity.Property(e => e.Estado)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasDefaultValue("");
        });

        modelBuilder.Entity<Municipios>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Municipi__3214EC07AA41D8D0");

            entity.Property(e => e.Municipio)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false)
                .HasDefaultValue("");

            entity.HasOne(d => d.IdEstadoNavigation).WithMany(p => p.Municipios)
                .HasForeignKey(d => d.IdEstado)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Municipio__IdEst__4AB81AF0");
        });

        modelBuilder.Entity<Ocasiones>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Ocasione__3214EC07467C5E13");

            entity.Property(e => e.Ocasion)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false);
        });

        modelBuilder.Entity<ProductoOcasiones>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Producto__3214EC07942E59A3");

            entity.HasOne(d => d.IdOcasionNavigation).WithMany(p => p.ProductoOcasiones)
                .HasForeignKey(d => d.IdOcasion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductoO__IdOca__08B54D69");

            entity.HasOne(d => d.IdProductoNavigation).WithMany(p => p.ProductoOcasiones)
                .HasForeignKey(d => d.IdProducto)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProductoO__IdPro__07C12930");
        });

        modelBuilder.Entity<Productos>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Producto__3214EC072E88E1F1");

            entity.Property(e => e.Producto)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false);

            entity.HasOne(d => d.IdCategoriaNavigation).WithMany(p => p.Productos)
                .HasForeignKey(d => d.IdCategoria)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Productos__IdCat__02FC7413");

            entity.HasOne(d => d.IdProveedorNavigation).WithMany(p => p.Productos)
                .HasForeignKey(d => d.IdProveedor)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Productos__IdPro__03F0984C");
        });

        modelBuilder.Entity<Proveedores>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Proveedo__3214EC076BA50E3C");

            entity.Property(e => e.Proveedor)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false);

            entity.HasOne(d => d.IdDireccionNavigation).WithMany(p => p.Proveedores)
                .HasForeignKey(d => d.IdDireccion)
                .HasConstraintName("FK__Proveedor__IdDir__00200768");
        });

        modelBuilder.Entity<Sucursales>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Sucursal__3214EC07AEED3E92");

            entity.Property(e => e.Sucursal)
                .IsRequired()
                .HasMaxLength(60)
                .IsUnicode(false);

            entity.HasOne(d => d.IdDireccionNavigation).WithMany(p => p.Sucursales)
                .HasForeignKey(d => d.IdDireccion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Sucursale__IdDir__7D439ABD");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}